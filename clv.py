# -*- coding: utf-8 -*-
"""CLV

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nzttbmTX6BjlP4BCrdm7UTLpd6Me3qbe
"""

import pandas as pd
from scipy.stats import f_oneway

# Load your dataset
file_path = "experiment data (1).xlsx"  # Replace with the actual path to your dataset
df = pd.read_csv(file_path)

# Ensure the dataset has necessary columns
# Group by a condition (e.g., 'Condition1') and extract 'Purchase Likelihood' for ANOVA
unique_conditions = df['Condition1'].unique()

# Extract data for each condition
groups = [df[df['Condition1'] == condition]['Purchase Likelihood'] for condition in unique_conditions]

# Perform one-way ANOVA
anova_result = f_oneway(*groups)

# Print the ANOVA result
print("ANOVA result:", anova_result)

import pandas as pd
from scipy.stats import f_oneway

# Load your dataset
file_path = "experiment data (1).xlsx"  # Replace with the actual path to your dataset

# Use pd.read_excel to read excel files and try different encoding if 'utf-8' fails
try:
    df = pd.read_excel(file_path)  # Try reading with default encoding
except UnicodeDecodeError:
    df = pd.read_excel(file_path, encoding='latin-1') # Try 'latin-1' if default fails
    # you can also try other encoding like 'cp1252', 'iso-8859-1', or 'utf-16'

# Ensure the dataset has necessary columns
# Group by a condition (e.g., 'Condition1') and extract 'Purchase Likelihood' for ANOVA
unique_conditions = df['Condition1'].unique()

# Extract data for each condition
groups = [df[df['Condition1'] == condition]['Purchase Likelihood'] for condition in unique_conditions]

# Perform one-way ANOVA
anova_result = f_oneway(*groups)

# Print the ANOVA result
print("ANOVA result:", anova_result)

# prompt: Run anova on my data file experiment data (1).xlsx

import pandas as pd
from scipy.stats import f_oneway

# Load your dataset
file_path = "experiment data (1).xlsx"  # Replace with the actual path to your dataset

# Use pd.read_excel to read excel files and try different encoding if 'utf-8' fails
try:
    df = pd.read_excel(file_path)  # Try reading with default encoding
except UnicodeDecodeError:
    try:
        df = pd.read_excel(file_path, encoding='latin-1') # Try 'latin-1' if default fails
    except:
        print("Error: Could not read the excel file. Check file path and encoding.")
        exit()
    # you can also try other encoding like 'cp1252', 'iso-8859-1', or 'utf-16'
except FileNotFoundError:
    print(f"Error: File not found at {file_path}")
    exit()


# Ensure the dataset has necessary columns
if not all(col in df.columns for col in ['Condition1', 'Purchase Likelihood']):
    print("Error: 'Condition1' or 'Purchase Likelihood' columns not found in the dataset.")
    exit()

# Group by a condition (e.g., 'Condition1') and extract 'Purchase Likelihood' for ANOVA
unique_conditions = df['Condition1'].unique()

# Extract data for each condition
groups = [df[df['Condition1'] == condition]['Purchase Likelihood'] for condition in unique_conditions]

# Perform one-way ANOVA
try:
    anova_result = f_oneway(*groups)

    # Print the ANOVA result
    print("ANOVA result:", anova_result)
except ValueError:
    print("Error: Not enough data points in one or more groups for ANOVA.")

groups = [df[df['Condition1'] == condition]['Purchase Likelihood'] for condition in unique_conditions]

# prompt: Run anova on my data file experiment data (1).xlsx

import pandas as pd
from scipy.stats import f_oneway

# Load your dataset
file_path = "experiment data (1).xlsx"  # Replace with the actual path to your dataset

# Use pd.read_excel to read excel files and try different encoding if 'utf-8' fails
try:
    df = pd.read_excel(file_path)  # Try reading with default encoding
except UnicodeDecodeError:
    try:
        df = pd.read_excel(file_path, encoding='latin-1') # Try 'latin-1' if default fails
    except:
        print("Error: Could not read the excel file. Check file path and encoding.")
        exit()
    # you can also try other encoding like 'cp1252', 'iso-8859-1', or 'utf-16'
except FileNotFoundError:
    print(f"Error: File not found at {file_path}")
    exit()

# Print the column names to check for the correct name
print(df.columns)

# Ensure the dataset has necessary columns
# Updated to check for potential variations in column names
if not any(col in df.columns for col in ['Purchase Likelihood', 'Purchaselikelihood', 'purchase likelihood']):
    print("Error: 'Purchase Likelihood' column (or a variation) not found in the dataset.")
    exit()

# Replace 'Purchase Likelihood' with actual column name if needed
purchase_likelihood_col = next((col for col in df.columns if col in ['Purchase Likelihood', 'Purchaselikelihood', 'purchase likelihood']), None)

# Group by a condition (e.g., 'Condition1') and extract 'Purchase Likelihood' for ANOVA
unique_conditions = df['Condition1'].unique()

# Extract data for each condition, using the identified column name
groups = [df[df['Condition1'] == condition][purchase_likelihood_col] for condition in unique_conditions]

# Perform one-way ANOVA
try:
    anova_result = f_oneway(*groups)

    # Print the ANOVA result
    print("ANOVA result:", anova_result)
except ValueError:
    print("Error: Not enough data points in one or more groups for ANOVA.")

import pandas as pd
from scipy.stats import f_oneway

# Load your larger dataset
file_path = 'your_dataset.csv'  # Replace with your file path
data = pd.read_csv(file_path)

# Ensure the data is structured as needed
# Rename columns if necessary to match the example structure
data.columns = ['Purchase_likelihood', 'Condition1', 'Condition2']

# Perform one-way ANOVA for 'Condition1'
groups_condition1 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition1')]
anova_condition1 = f_oneway(*groups_condition1)

# Perform one-way ANOVA for 'Condition2'
groups_condition2 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition2')]
anova_condition2 = f_oneway(*groups_condition2)

# Display results
print("ANOVA Results for Condition1:")
print(f"F-statistic: {anova_condition1.statistic}, p-value: {anova_condition1.pvalue}")

print("\nANOVA Results for Condition2:")
print(f"F-statistic: {anova_condition2.statistic}, p-value: {anova_condition2.pvalue}")

import pandas as pd
from scipy.stats import f_oneway

# Load your dataset from Excel
file_path = '/content/experiment data (1).xlsx'  # Replace with your actual file path
data = pd.read_excel(file_path)

# Ensure the data is structured correctly
# Rename columns if necessary to match the example structure
data.columns = ['Purchase_likelihood', 'Condition1', 'Condition2']

# Perform one-way ANOVA for 'Condition1'
groups_condition1 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition1')]
anova_condition1 = f_oneway(*groups_condition1)

# Perform one-way ANOVA for 'Condition2'
groups_condition2 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition2')]
anova_condition2 = f_oneway(*groups_condition2)

# Display results
print("ANOVA Results for Condition1:")
import pandas as pd
from scipy.stats import f_oneway

# Load your dataset from Excel
file_path = '/content/experiment data (1).xlsx'  # Replace with your actual file path
data = pd.read_excel(file_path)

# Ensure the data is structured correctly
# Rename columns if necessary to match the example structure
data.columns = ['Purchase_likelihood', 'Condition1', 'Condition2']

# Perform one-way ANOVA for 'Condition1'
groups_condition1 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition1')]
anova_condition1 = f_oneway(*groups_condition1)

# Perform one-way ANOVA for 'Condition2'
groups_condition2 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition2')]
anova_condition2 = f_oneway(*groups_condition2)

# Display results
print("ANOVA Results for Condition1:")
print(f"F-statistic: {anova_condition1.statistic}, p-value: {anova_condition1.pvalue}")

print("\nANOVA Results for Condition2:")
print(f"F-statistic: {anova_condition2.statistic}, p-value: {anova_condition2.pvalue}")
data = pd.read_excel(file_path)

# Ensure the data is structured correctly
# Rename columns if necessary to match the example structure
data.columns = ['Purchase_likelihood', 'Condition1', 'Condition2']

# Perform one-way ANOVA for 'Condition1'
groups_condition1 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition1')]
anova_condition1 = f_oneway(*groups_condition1)

# Perform one-way ANOVA for 'Condition2'
groups_condition2 = [group['Purchase_likelihood'].values for name, group in data.groupby('Condition2')]
anova_condition2 = f_oneway(*groups_condition2)

# Display results
print("ANOVA Results for Condition1:")
print(f"F-statistic: {anova_condition1.statistic}, p-value: {anova_condition1.pvalue}")

print("\nANOVA Results for Condition2:")
print(f"F-statistic: {anova_condition2.statistic}, p-value: {anova_condition2.pvalue}")

# prompt: GIve me chart for above anova test

import matplotlib.pyplot as plt
import seaborn as sns

# Assuming 'data' DataFrame is already loaded and processed as in the previous code

# Boxplot for Condition1
plt.figure(figsize=(8, 6))
sns.boxplot(x='Condition1', y='Purchase_likelihood', data=data)
plt.title('Purchase Likelihood by Condition1')
plt.xlabel('Condition1')
plt.ylabel('Purchase Likelihood')
plt.show()

# Boxplot for Condition2
plt.figure(figsize=(8, 6))
sns.boxplot(x='Condition2', y='Purchase_likelihood', data=data)
plt.title('Purchase Likelihood by Condition2')
plt.xlabel('Condition2')
plt.ylabel('Purchase Likelihood')
plt.show()

# Violinplot for Condition1 (shows distribution)
plt.figure(figsize=(8, 6))
sns.violinplot(x='Condition1', y='Purchase_likelihood', data=data)
plt.title('Purchase Likelihood Distribution by Condition1')
plt.xlabel('Condition1')
plt.ylabel('Purchase Likelihood')
plt.show()

# Violinplot for Condition2
plt.figure(figsize=(8, 6))
sns.violinplot(x='Condition2', y='Purchase_likelihood', data=data)
plt.title('Purchase Likelihood Distribution by Condition2')
plt.xlabel('Condition2')
plt.ylabel('Purchase Likelihood')
plt.show()